{"version":3,"sources":["../src/ignore-rules.js"],"names":["isIgnored","IgnoreNames","Set","map","x","toLowerCase","IgnorePrefixes","node","name","path","lower","ignore","has","some","p","substr","length"],"mappings":";;;;;QAuDgBA,S,GAAAA,S;;AAtDhB;;AAEA;;AAEA,MAAMC,cAA2B,IAAIC,GAAJ,CAC/B;AACE;AACA,YAFF;;AAIE;AACA,WALF;AAME;AACA,cAPF;;AASE;AACA,yBAVF,EAWE,YAXF,EAYE,iBAZF,EAaE,iBAbF,EAcE,UAdF,EAeE,kBAfF,EAgBE,qCAhBF;;AAkBE;AACA,UAnBF,EAoBE,eApBF;AAqBE;AACA;AACA,SAvBF;;AAyBE;AACA,aA1BF;;AA4BE;AACA,cA7BF;;AA+BE;AACA,WAhCF,EAiCE,aAjCF,EAkCE,mBAlCF,EAmCEC,GAnCF,CAmCMC,KAAKA,EAAEC,WAAF,EAnCX,CAD+B,CAAjC;;;AAuCA,MAAMC,iBAA2B;AAC/B;AACA,cAF+B;AAG/B;AACA,SAJ+B;AAK/B;AACA,MAN+B;AAO/B;AACA,IAR+B,EAS/BH,GAT+B,CAS3BC,KAAKA,EAAEC,WAAF,EATsB,CAAjC;;AAWO,SAASL,SAAT,CAAmBO,IAAnB,EAAwC;AAC7C,MAAI,EAACC,IAAD,KAASD,KAAKE,IAAlB;AACA,MAAIC,QAAQF,KAAKH,WAAL,EAAZ;AACA,MAAIM,SACFV,YAAYW,GAAZ,CAAgBF,KAAhB,KACAJ,eAAeO,IAAf,CAAoBC,KAAKJ,MAAMK,MAAN,CAAa,CAAb,EAAgBD,EAAEE,MAAlB,MAA8BF,CAAvD,CAFF;AAGA;AACA;AACA;AACA,SAAOH,MAAP;AACD","file":"ignore-rules.js","sourcesContent":["// @flow\nimport {Node} from './scanning';\n\n// Most of this is copied from https://www.gitignore.io/api/linux%2Cmacos%2Cwindows\n\nconst IgnoreNames: Set<string> = new Set(\n  [\n    // KDE/Dolphin directory preferences\n    '.directory',\n\n    // macOS Finder directory preferences\n    '.DS_Store',\n    // macOS resource forks\n    '.AppleDouble',\n\n    // Files that might appear in the root of a volume\n    '.DocumentRevisions-V100',\n    '.fseventsd',\n    '.Spotlight-V100',\n    '.TemporaryItems',\n    '.Trashes',\n    '.VolumeIcon.icns',\n    '.com.apple.timemachine.donotpresent',\n\n    // Directories potentially created on remote AFP share\n    '.AppleDB',\n    '.AppleDesktop',\n    // 'Network Trash Folder',\n    // 'Temporary Items',\n    '.apdisk',\n\n    // Windows folder config file\n    'desktop.ini',\n\n    // Windows volume recycle bin\n    '$RECYCLE.BIN',\n\n    // Windows thumbnail databases\n    'Thumbs.db',\n    'ehthumbs.db',\n    'ehthumbs_vista.db',\n  ].map(x => x.toLowerCase()),\n);\n\nconst IgnorePrefixes: string[] = [\n  // Temporary files created by FUSE if a file is deleted but is still open\n  '.fuse_hidden',\n  // Linux trash folder (suffix is user ID)\n  '.Trash-',\n  // Temporary files created by NFS when a file is deleted but is still open\n  '.nfs',\n  // macOS resource forks\n  '._',\n].map(x => x.toLowerCase());\n\nexport function isIgnored(node: Node): boolean {\n  let {name} = node.path;\n  let lower = name.toLowerCase();\n  let ignore =\n    IgnoreNames.has(lower) ||\n    IgnorePrefixes.some(p => lower.substr(0, p.length) === p);\n  // if (ignore) {\n  //   console.log(`IGNORED: ${node.path.get()}`);\n  // }\n  return ignore;\n}\n"]}